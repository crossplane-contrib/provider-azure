
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: virtualnetworks.network.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  - JSONPath: .status.state
    name: STATE
    type: string
  - JSONPath: .spec.location
    name: LOCATION
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: network.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: VirtualNetwork
    listKind: VirtualNetworkList
    plural: virtualnetworks
    singular: virtualnetwork
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A VirtualNetwork is a managed resource that represents an Azure
        Virtual Network.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A VirtualNetworkSpec defines the desired state of a VirtualNetwork.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Deprecated. See https://github.com/crossplane/crossplane/issues/1670
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Deprecated.
                See https://github.com/crossplane/crossplane/issues/1670
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            deletionPolicy:
              description: DeletionPolicy specifies what will happen to the underlying
                external when this managed resource is deleted - either "Delete" or
                "Orphan" the external resource. The "Delete" policy is the default
                when no policy is specified.
              enum:
              - Orphan
              - Delete
              type: string
            location:
              description: Location - Resource location.
              type: string
            properties:
              description: VirtualNetworkPropertiesFormat - Properties of the virtual
                network.
              properties:
                addressSpace:
                  description: AddressSpace - The AddressSpace that contains an array
                    of IP address ranges that can be used by subnets.
                  properties:
                    addressPrefixes:
                      description: AddressPrefixes - A list of address blocks reserved
                        for this virtual network in CIDR notation.
                      items:
                        type: string
                      type: array
                  required:
                  - addressPrefixes
                  type: object
                enableDdosProtection:
                  description: EnableDDOSProtection - Indicates if DDoS protection
                    is enabled for all the protected resources in the virtual network.
                    It requires a DDoS protection plan associated with the resource.
                  type: boolean
                enableVmProtection:
                  description: EnableVMProtection - Indicates if VM protection is
                    enabled for all the subnets in the virtual network.
                  type: boolean
              type: object
            providerConfigRef:
              description: ProviderConfigReference specifies how the provider that
                will be used to create, observe, update, and delete this managed resource
                should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            providerRef:
              description: 'ProviderReference specifies the provider that will be
                used to create, observe, update, and delete this managed resource.
                Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: "ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The \"Delete\" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The \"Retain\"
                policy causes the managed resource to be retained, in binding phase
                \"Released\", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The \"Delete\" policy is used when no policy is specified.
                \n Deprecated. DeletionPolicy takes precedence when both are set.
                See https://github.com/crossplane/crossplane-runtime/issues/179."
              enum:
              - Retain
              - Delete
              type: string
            resourceGroupName:
              description: ResourceGroupName - Name of the Virtual Network's resource
                group.
              type: string
            resourceGroupNameRef:
              description: ResourceGroupNameRef - A reference to the the Virtual Network's
                resource group.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            resourceGroupNameSelector:
              description: ResourceGroupNameSelector - Select a reference to the the
                Virtual Network's resource group.
              properties:
                matchControllerRef:
                  description: MatchControllerRef ensures an object with the same
                    controller reference as the selecting object is selected.
                  type: boolean
                matchLabels:
                  additionalProperties:
                    type: string
                  description: MatchLabels ensures an object with matching labels
                    is selected.
                  type: object
              type: object
            tags:
              additionalProperties:
                type: string
              description: Tags - Resource tags.
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - location
          - properties
          type: object
        status:
          description: A VirtualNetworkStatus represents the observed state of a VirtualNetwork.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource. Deprecated. See https://github.com/crossplane/crossplane/issues/1670
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            etag:
              description: Etag - A unique read-only string that changes whenever
                the resource is updated.
              type: string
            id:
              description: ID of this VirtualNetwork.
              type: string
            message:
              description: A Message providing detail about the state of this VirtualNetwork,
                if any.
              type: string
            resourceGuid:
              description: ResourceGUID - The GUID of this VirtualNetwork.
              type: string
            state:
              description: State of this VirtualNetwork.
              type: string
            type:
              description: Type of this VirtualNetwork.
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
