
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: redisclasses.cache.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.azure.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - azure
    kind: RedisClass
    listKind: RedisClassList
    plural: redisclasses
    singular: redisclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A RedisClass is a non-portable resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            Redis.
          properties:
            forProvider:
              description: RedisParameters define the desired state of an Azure Redis
                cluster. https://docs.microsoft.com/en-us/rest/api/redis/redis/create#redisresource
              properties:
                enableNonSslPort:
                  description: EnableNonSSLPort specifies whether the non-ssl Redis
                    server port (6379) is enabled.
                  type: boolean
                location:
                  description: Location in which to create this resource.
                  type: string
                minimumTlsVersion:
                  description: 'MinimumTLSVersion - Optional: requires clients to
                    use a specified TLS version (or higher) to connect (e,g, ''1.0'',
                    ''1.1'', ''1.2''). Possible values include: ''OneFullStopZero'',
                    ''OneFullStopOne'', ''OneFullStopTwo'''
                  type: string
                redisConfiguration:
                  additionalProperties:
                    type: string
                  description: 'RedisConfiguration - All Redis Settings. Few possible
                    keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency
                    maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,
                    slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,
                    list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,
                    set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                    etc.'
                  type: object
                resourceGroupName:
                  description: ResourceGroupName in which to create this resource.
                  type: string
                resourceGroupNameRef:
                  description: ResourceGroupNameRef to fetch resource group name.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                resourceGroupNameSelector:
                  description: ResourceGroupNameSelector to select a reference to
                    a resource group.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                shardCount:
                  description: ShardCount specifies the number of shards to be created
                    on a Premium Cluster Cache.
                  type: integer
                sku:
                  description: Sku - The SKU of the Redis cache to deploy.
                  properties:
                    capacity:
                      description: 'Capacity specifies the size of Redis cache to
                        deploy. Valid values: for C family (0, 1, 2, 3, 4, 5, 6),
                        for P family (1, 2, 3, 4).'
                      maximum: 6
                      minimum: 0
                      type: integer
                    family:
                      description: 'Family specifies which family to use. Valid values:
                        (C, P). Possible values include: ''C'', ''P'''
                      enum:
                      - C
                      - P
                      type: string
                    name:
                      description: 'Name specifies what type of Redis cache to deploy.
                        Valid values: (Basic, Standard, Premium). Possible values
                        include: ''Basic'', ''Standard'', ''Premium'''
                      enum:
                      - Basic
                      - Standard
                      - Premium
                      type: string
                  required:
                  - capacity
                  - family
                  - name
                  type: object
                staticIp:
                  description: StaticIP address. Required when deploying a Redis cache
                    inside an existing Azure Virtual Network.
                  type: string
                subnetId:
                  description: 'SubnetID specifies the full resource ID of a subnet
                    in a virtual network to deploy the Redis cache in. Example format:
                    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1'
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: Tags - Resource tags.
                  type: object
                tenantSettings:
                  additionalProperties:
                    type: string
                  description: TenantSettings - A dictionary of tenant settings
                  type: object
                zones:
                  description: Zones - A list of availability zones denoting where
                    the resource needs to come from.
                  items:
                    type: string
                  type: array
              required:
              - location
              - sku
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Delete" policy is used when
                no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
