/*
Copyright 2019 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by angryjet. DO NOT EDIT.

package v1alpha3

import runtimev1alpha1 "github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"

// GetCondition of this CosmosDBAccount.
func (mg *CosmosDBAccount) GetCondition(ct runtimev1alpha1.ConditionType) runtimev1alpha1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosDBAccount.
func (mg *CosmosDBAccount) GetDeletionPolicy() runtimev1alpha1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosDBAccount.
func (mg *CosmosDBAccount) GetProviderConfigReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosDBAccount.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosDBAccount) GetProviderReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosDBAccount.
func (mg *CosmosDBAccount) GetWriteConnectionSecretToReference() *runtimev1alpha1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosDBAccount.
func (mg *CosmosDBAccount) SetConditions(c ...runtimev1alpha1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosDBAccount.
func (mg *CosmosDBAccount) SetDeletionPolicy(r runtimev1alpha1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosDBAccount.
func (mg *CosmosDBAccount) SetProviderConfigReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosDBAccount.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosDBAccount) SetProviderReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosDBAccount.
func (mg *CosmosDBAccount) SetWriteConnectionSecretToReference(r *runtimev1alpha1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) GetCondition(ct runtimev1alpha1.ConditionType) runtimev1alpha1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) GetDeletionPolicy() runtimev1alpha1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) GetProviderConfigReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MySQLServerFirewallRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MySQLServerFirewallRule) GetProviderReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) GetWriteConnectionSecretToReference() *runtimev1alpha1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) SetConditions(c ...runtimev1alpha1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) SetDeletionPolicy(r runtimev1alpha1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) SetProviderConfigReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MySQLServerFirewallRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MySQLServerFirewallRule) SetProviderReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MySQLServerFirewallRule.
func (mg *MySQLServerFirewallRule) SetWriteConnectionSecretToReference(r *runtimev1alpha1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) GetCondition(ct runtimev1alpha1.ConditionType) runtimev1alpha1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) GetDeletionPolicy() runtimev1alpha1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) GetProviderConfigReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MySQLServerVirtualNetworkRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MySQLServerVirtualNetworkRule) GetProviderReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) GetWriteConnectionSecretToReference() *runtimev1alpha1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) SetConditions(c ...runtimev1alpha1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) SetDeletionPolicy(r runtimev1alpha1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) SetProviderConfigReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MySQLServerVirtualNetworkRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MySQLServerVirtualNetworkRule) SetProviderReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MySQLServerVirtualNetworkRule.
func (mg *MySQLServerVirtualNetworkRule) SetWriteConnectionSecretToReference(r *runtimev1alpha1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) GetCondition(ct runtimev1alpha1.ConditionType) runtimev1alpha1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) GetDeletionPolicy() runtimev1alpha1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) GetProviderConfigReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PostgreSQLServerFirewallRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PostgreSQLServerFirewallRule) GetProviderReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) GetWriteConnectionSecretToReference() *runtimev1alpha1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) SetConditions(c ...runtimev1alpha1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) SetDeletionPolicy(r runtimev1alpha1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) SetProviderConfigReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PostgreSQLServerFirewallRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PostgreSQLServerFirewallRule) SetProviderReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PostgreSQLServerFirewallRule.
func (mg *PostgreSQLServerFirewallRule) SetWriteConnectionSecretToReference(r *runtimev1alpha1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) GetCondition(ct runtimev1alpha1.ConditionType) runtimev1alpha1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) GetDeletionPolicy() runtimev1alpha1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) GetProviderConfigReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PostgreSQLServerVirtualNetworkRule.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PostgreSQLServerVirtualNetworkRule) GetProviderReference() *runtimev1alpha1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) GetWriteConnectionSecretToReference() *runtimev1alpha1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) SetConditions(c ...runtimev1alpha1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) SetDeletionPolicy(r runtimev1alpha1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) SetProviderConfigReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PostgreSQLServerVirtualNetworkRule.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PostgreSQLServerVirtualNetworkRule) SetProviderReference(r *runtimev1alpha1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PostgreSQLServerVirtualNetworkRule.
func (mg *PostgreSQLServerVirtualNetworkRule) SetWriteConnectionSecretToReference(r *runtimev1alpha1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
