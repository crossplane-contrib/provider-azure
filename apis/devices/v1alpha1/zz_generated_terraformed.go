/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	"github.com/pkg/errors"

	"github.com/crossplane/terrajet/pkg/resource"
	"github.com/crossplane/terrajet/pkg/resource/json"
)

// GetTerraformResourceType returns Terraform resource type for this IOTHubEndpointEventHub
func (mg *IOTHubEndpointEventHub) GetTerraformResourceType() string {
	return "azurerm_iothub_endpoint_eventhub"
}

// GetConnectionDetailsMapping for this IOTHubEndpointEventHub
func (tr *IOTHubEndpointEventHub) GetConnectionDetailsMapping() map[string]string {
	return map[string]string{"connection_string": "spec.forProvider.connectionStringSecretRef"}
}

// GetObservation of this IOTHubEndpointEventHub
func (tr *IOTHubEndpointEventHub) GetObservation() (map[string]interface{}, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this IOTHubEndpointEventHub
func (tr *IOTHubEndpointEventHub) SetObservation(obs map[string]interface{}) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this IOTHubEndpointEventHub
func (tr *IOTHubEndpointEventHub) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this IOTHubEndpointEventHub
func (tr *IOTHubEndpointEventHub) GetParameters() (map[string]interface{}, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this IOTHubEndpointEventHub
func (tr *IOTHubEndpointEventHub) SetParameters(params map[string]interface{}) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// LateInitialize this IOTHubEndpointEventHub using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *IOTHubEndpointEventHub) LateInitialize(attrs []byte) (bool, error) {
	params := &IOTHubEndpointEventHubParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *IOTHubEndpointEventHub) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this IOTHubEndpointServiceBusQueue
func (mg *IOTHubEndpointServiceBusQueue) GetTerraformResourceType() string {
	return "azurerm_iothub_endpoint_servicebus_queue"
}

// GetConnectionDetailsMapping for this IOTHubEndpointServiceBusQueue
func (tr *IOTHubEndpointServiceBusQueue) GetConnectionDetailsMapping() map[string]string {
	return map[string]string{"connection_string": "spec.forProvider.connectionStringSecretRef"}
}

// GetObservation of this IOTHubEndpointServiceBusQueue
func (tr *IOTHubEndpointServiceBusQueue) GetObservation() (map[string]interface{}, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this IOTHubEndpointServiceBusQueue
func (tr *IOTHubEndpointServiceBusQueue) SetObservation(obs map[string]interface{}) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this IOTHubEndpointServiceBusQueue
func (tr *IOTHubEndpointServiceBusQueue) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this IOTHubEndpointServiceBusQueue
func (tr *IOTHubEndpointServiceBusQueue) GetParameters() (map[string]interface{}, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this IOTHubEndpointServiceBusQueue
func (tr *IOTHubEndpointServiceBusQueue) SetParameters(params map[string]interface{}) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// LateInitialize this IOTHubEndpointServiceBusQueue using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *IOTHubEndpointServiceBusQueue) LateInitialize(attrs []byte) (bool, error) {
	params := &IOTHubEndpointServiceBusQueueParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *IOTHubEndpointServiceBusQueue) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this IOTHubEndpointServiceBusTopic
func (mg *IOTHubEndpointServiceBusTopic) GetTerraformResourceType() string {
	return "azurerm_iothub_endpoint_servicebus_topic"
}

// GetConnectionDetailsMapping for this IOTHubEndpointServiceBusTopic
func (tr *IOTHubEndpointServiceBusTopic) GetConnectionDetailsMapping() map[string]string {
	return map[string]string{"connection_string": "spec.forProvider.connectionStringSecretRef"}
}

// GetObservation of this IOTHubEndpointServiceBusTopic
func (tr *IOTHubEndpointServiceBusTopic) GetObservation() (map[string]interface{}, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this IOTHubEndpointServiceBusTopic
func (tr *IOTHubEndpointServiceBusTopic) SetObservation(obs map[string]interface{}) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this IOTHubEndpointServiceBusTopic
func (tr *IOTHubEndpointServiceBusTopic) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this IOTHubEndpointServiceBusTopic
func (tr *IOTHubEndpointServiceBusTopic) GetParameters() (map[string]interface{}, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this IOTHubEndpointServiceBusTopic
func (tr *IOTHubEndpointServiceBusTopic) SetParameters(params map[string]interface{}) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// LateInitialize this IOTHubEndpointServiceBusTopic using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *IOTHubEndpointServiceBusTopic) LateInitialize(attrs []byte) (bool, error) {
	params := &IOTHubEndpointServiceBusTopicParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *IOTHubEndpointServiceBusTopic) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this IOTHubEnrichment
func (mg *IOTHubEnrichment) GetTerraformResourceType() string {
	return "azurerm_iothub_enrichment"
}

// GetConnectionDetailsMapping for this IOTHubEnrichment
func (tr *IOTHubEnrichment) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this IOTHubEnrichment
func (tr *IOTHubEnrichment) GetObservation() (map[string]interface{}, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this IOTHubEnrichment
func (tr *IOTHubEnrichment) SetObservation(obs map[string]interface{}) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this IOTHubEnrichment
func (tr *IOTHubEnrichment) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this IOTHubEnrichment
func (tr *IOTHubEnrichment) GetParameters() (map[string]interface{}, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this IOTHubEnrichment
func (tr *IOTHubEnrichment) SetParameters(params map[string]interface{}) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// LateInitialize this IOTHubEnrichment using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *IOTHubEnrichment) LateInitialize(attrs []byte) (bool, error) {
	params := &IOTHubEnrichmentParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *IOTHubEnrichment) GetTerraformSchemaVersion() int {
	return 0
}

// GetTerraformResourceType returns Terraform resource type for this IOTHubRoute
func (mg *IOTHubRoute) GetTerraformResourceType() string {
	return "azurerm_iothub_route"
}

// GetConnectionDetailsMapping for this IOTHubRoute
func (tr *IOTHubRoute) GetConnectionDetailsMapping() map[string]string {
	return nil
}

// GetObservation of this IOTHubRoute
func (tr *IOTHubRoute) GetObservation() (map[string]interface{}, error) {
	o, err := json.TFParser.Marshal(tr.Status.AtProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(o, &base)
}

// SetObservation for this IOTHubRoute
func (tr *IOTHubRoute) SetObservation(obs map[string]interface{}) error {
	p, err := json.TFParser.Marshal(obs)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Status.AtProvider)
}

// GetID returns ID of underlying Terraform resource of this IOTHubRoute
func (tr *IOTHubRoute) GetID() string {
	if tr.Status.AtProvider.ID == nil {
		return ""
	}
	return *tr.Status.AtProvider.ID
}

// GetParameters of this IOTHubRoute
func (tr *IOTHubRoute) GetParameters() (map[string]interface{}, error) {
	p, err := json.TFParser.Marshal(tr.Spec.ForProvider)
	if err != nil {
		return nil, err
	}
	base := map[string]interface{}{}
	return base, json.TFParser.Unmarshal(p, &base)
}

// SetParameters for this IOTHubRoute
func (tr *IOTHubRoute) SetParameters(params map[string]interface{}) error {
	p, err := json.TFParser.Marshal(params)
	if err != nil {
		return err
	}
	return json.TFParser.Unmarshal(p, &tr.Spec.ForProvider)
}

// LateInitialize this IOTHubRoute using its observed tfState.
// returns True if there are any spec changes for the resource.
func (tr *IOTHubRoute) LateInitialize(attrs []byte) (bool, error) {
	params := &IOTHubRouteParameters{}
	if err := json.TFParser.Unmarshal(attrs, params); err != nil {
		return false, errors.Wrap(err, "failed to unmarshal Terraform state parameters for late-initialization")
	}
	opts := []resource.GenericLateInitializerOption{resource.WithZeroValueJSONOmitEmptyFilter(resource.CNameWildcard)}

	li := resource.NewGenericLateInitializer(opts...)
	return li.LateInitialize(&tr.Spec.ForProvider, params)
}

// GetTerraformSchemaVersion returns the associated Terraform schema version
func (tr *IOTHubRoute) GetTerraformSchemaVersion() int {
	return 0
}
