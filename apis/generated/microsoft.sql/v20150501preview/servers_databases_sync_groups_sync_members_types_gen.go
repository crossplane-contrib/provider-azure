// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20150501preview

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type ServersDatabasesSyncGroupsSyncMembers struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServersDatabasesSyncGroupsSyncMembers_Spec `json:"spec,omitempty"`
	Status            SyncMember_Status                          `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type ServersDatabasesSyncGroupsSyncMembersList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServersDatabasesSyncGroupsSyncMembers `json:"items"`
}

type ServersDatabasesSyncGroupsSyncMembers_Spec struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           ServersDatabasesSyncGroupsSyncMembersParameters `json:"forProvider"`
}

type SyncMember_Status struct {
	v1alpha1.ResourceStatus `json:",inline"`
	AtProvider              ServersDatabasesSyncGroupsSyncMembersObservation `json:"atProvider"`
}

type ServersDatabasesSyncGroupsSyncMembersObservation struct {

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Resource properties.
	Properties *SyncMemberProperties_Status `json:"properties,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type ServersDatabasesSyncGroupsSyncMembersParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion ServersDatabasesSyncGroupsSyncMembersSpecApiVersion `json:"apiVersion"`

	//Location: Location to deploy resource to
	Location *string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of a sync member.
	Properties                             SyncMemberProperties `json:"properties"`
	ResourceGroupName                      string               `json:"resourceGroupName"`
	ResourceGroupNameRef                   *v1alpha1.Reference  `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector              *v1alpha1.Selector   `json:"resourceGroupNameSelector,omitempty"`
	ServersDatabasesSyncGroupsName         string               `json:"serversDatabasesSyncGroupsName"`
	ServersDatabasesSyncGroupsNameRef      *v1alpha1.Reference  `json:"serversDatabasesSyncGroupsNameRef,omitempty"`
	ServersDatabasesSyncGroupsNameSelector *v1alpha1.Selector   `json:"serversDatabasesSyncGroupsNameSelector,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type ServersDatabasesSyncGroupsSyncMembersSpecType `json:"type"`
}

// +kubebuilder:validation:Enum={"2015-05-01-preview"}
type ServersDatabasesSyncGroupsSyncMembersSpecApiVersion string

const ServersDatabasesSyncGroupsSyncMembersSpecApiVersion20150501Preview = ServersDatabasesSyncGroupsSyncMembersSpecApiVersion("2015-05-01-preview")

// +kubebuilder:validation:Enum={"Microsoft.Sql/servers/databases/syncGroups/syncMembers"}
type ServersDatabasesSyncGroupsSyncMembersSpecType string

const ServersDatabasesSyncGroupsSyncMembersSpecTypeMicrosoftSqlServersDatabasesSyncGroupsSyncMembers = ServersDatabasesSyncGroupsSyncMembersSpecType("Microsoft.Sql/servers/databases/syncGroups/syncMembers")

//Generated from: https://schema.management.azure.com/schemas/2015-05-01-preview/Microsoft.Sql.json#/definitions/SyncMemberProperties
type SyncMemberProperties struct {

	//DatabaseName: Database name of the member database in the sync member.
	DatabaseName *string `json:"databaseName,omitempty"`

	//DatabaseType: Database type of the sync member.
	DatabaseType *SyncMemberPropertiesDatabaseType `json:"databaseType,omitempty"`

	//Password: Password of the member database in the sync member.
	Password *string `json:"password,omitempty"`

	//ServerName: Server name of the member database in the sync member
	ServerName *string `json:"serverName,omitempty"`

	//SqlServerDatabaseId: SQL Server database id of the sync member.
	SqlServerDatabaseId *string `json:"sqlServerDatabaseId,omitempty"`

	//SyncAgentId: ARM resource id of the sync agent in the sync member.
	SyncAgentId *string `json:"syncAgentId,omitempty"`

	//SyncDirection: Sync direction of the sync member.
	SyncDirection *SyncMemberPropertiesSyncDirection `json:"syncDirection,omitempty"`

	//UserName: User name of the member database in the sync member.
	UserName *string `json:"userName,omitempty"`
}

//Generated from:
type SyncMemberProperties_Status struct {

	//DatabaseName: Database name of the member database in the sync member.
	DatabaseName *string `json:"databaseName,omitempty"`

	//DatabaseType: Database type of the sync member.
	DatabaseType *SyncMemberPropertiesStatusDatabaseType `json:"databaseType,omitempty"`

	//Password: Password of the member database in the sync member.
	Password *string `json:"password,omitempty"`

	//ServerName: Server name of the member database in the sync member
	ServerName *string `json:"serverName,omitempty"`

	//SqlServerDatabaseId: SQL Server database id of the sync member.
	SqlServerDatabaseId *string `json:"sqlServerDatabaseId,omitempty"`

	//SyncAgentId: ARM resource id of the sync agent in the sync member.
	SyncAgentId *string `json:"syncAgentId,omitempty"`

	//SyncDirection: Sync direction of the sync member.
	SyncDirection *SyncMemberPropertiesStatusSyncDirection `json:"syncDirection,omitempty"`

	//SyncState: Sync state of the sync member.
	SyncState *SyncMemberPropertiesStatusSyncState `json:"syncState,omitempty"`

	//UserName: User name of the member database in the sync member.
	UserName *string `json:"userName,omitempty"`
}

// +kubebuilder:validation:Enum={"AzureSqlDatabase","SqlServerDatabase"}
type SyncMemberPropertiesDatabaseType string

const (
	SyncMemberPropertiesDatabaseTypeAzureSqlDatabase  = SyncMemberPropertiesDatabaseType("AzureSqlDatabase")
	SyncMemberPropertiesDatabaseTypeSqlServerDatabase = SyncMemberPropertiesDatabaseType("SqlServerDatabase")
)

// +kubebuilder:validation:Enum={"AzureSqlDatabase","SqlServerDatabase"}
type SyncMemberPropertiesStatusDatabaseType string

const (
	SyncMemberPropertiesStatusDatabaseTypeAzureSqlDatabase  = SyncMemberPropertiesStatusDatabaseType("AzureSqlDatabase")
	SyncMemberPropertiesStatusDatabaseTypeSqlServerDatabase = SyncMemberPropertiesStatusDatabaseType("SqlServerDatabase")
)

// +kubebuilder:validation:Enum={"Bidirectional","OneWayHubToMember","OneWayMemberToHub"}
type SyncMemberPropertiesStatusSyncDirection string

const (
	SyncMemberPropertiesStatusSyncDirectionBidirectional     = SyncMemberPropertiesStatusSyncDirection("Bidirectional")
	SyncMemberPropertiesStatusSyncDirectionOneWayHubToMember = SyncMemberPropertiesStatusSyncDirection("OneWayHubToMember")
	SyncMemberPropertiesStatusSyncDirectionOneWayMemberToHub = SyncMemberPropertiesStatusSyncDirection("OneWayMemberToHub")
)

// +kubebuilder:validation:Enum={"DeProvisionFailed","DeProvisioned","DeProvisioning","DisabledBackupRestore","DisabledTombstoneCleanup","ProvisionFailed","Provisioned","Provisioning","ReprovisionFailed","Reprovisioning","SyncCancelled","SyncCancelling","SyncFailed","SyncInProgress","SyncSucceeded","SyncSucceededWithWarnings","UnProvisioned","UnReprovisioned"}
type SyncMemberPropertiesStatusSyncState string

const (
	SyncMemberPropertiesStatusSyncStateDeProvisionFailed         = SyncMemberPropertiesStatusSyncState("DeProvisionFailed")
	SyncMemberPropertiesStatusSyncStateDeProvisioned             = SyncMemberPropertiesStatusSyncState("DeProvisioned")
	SyncMemberPropertiesStatusSyncStateDeProvisioning            = SyncMemberPropertiesStatusSyncState("DeProvisioning")
	SyncMemberPropertiesStatusSyncStateDisabledBackupRestore     = SyncMemberPropertiesStatusSyncState("DisabledBackupRestore")
	SyncMemberPropertiesStatusSyncStateDisabledTombstoneCleanup  = SyncMemberPropertiesStatusSyncState("DisabledTombstoneCleanup")
	SyncMemberPropertiesStatusSyncStateProvisionFailed           = SyncMemberPropertiesStatusSyncState("ProvisionFailed")
	SyncMemberPropertiesStatusSyncStateProvisioned               = SyncMemberPropertiesStatusSyncState("Provisioned")
	SyncMemberPropertiesStatusSyncStateProvisioning              = SyncMemberPropertiesStatusSyncState("Provisioning")
	SyncMemberPropertiesStatusSyncStateReprovisionFailed         = SyncMemberPropertiesStatusSyncState("ReprovisionFailed")
	SyncMemberPropertiesStatusSyncStateReprovisioning            = SyncMemberPropertiesStatusSyncState("Reprovisioning")
	SyncMemberPropertiesStatusSyncStateSyncCancelled             = SyncMemberPropertiesStatusSyncState("SyncCancelled")
	SyncMemberPropertiesStatusSyncStateSyncCancelling            = SyncMemberPropertiesStatusSyncState("SyncCancelling")
	SyncMemberPropertiesStatusSyncStateSyncFailed                = SyncMemberPropertiesStatusSyncState("SyncFailed")
	SyncMemberPropertiesStatusSyncStateSyncInProgress            = SyncMemberPropertiesStatusSyncState("SyncInProgress")
	SyncMemberPropertiesStatusSyncStateSyncSucceeded             = SyncMemberPropertiesStatusSyncState("SyncSucceeded")
	SyncMemberPropertiesStatusSyncStateSyncSucceededWithWarnings = SyncMemberPropertiesStatusSyncState("SyncSucceededWithWarnings")
	SyncMemberPropertiesStatusSyncStateUnProvisioned             = SyncMemberPropertiesStatusSyncState("UnProvisioned")
	SyncMemberPropertiesStatusSyncStateUnReprovisioned           = SyncMemberPropertiesStatusSyncState("UnReprovisioned")
)

// +kubebuilder:validation:Enum={"Bidirectional","OneWayHubToMember","OneWayMemberToHub"}
type SyncMemberPropertiesSyncDirection string

const (
	SyncMemberPropertiesSyncDirectionBidirectional     = SyncMemberPropertiesSyncDirection("Bidirectional")
	SyncMemberPropertiesSyncDirectionOneWayHubToMember = SyncMemberPropertiesSyncDirection("OneWayHubToMember")
	SyncMemberPropertiesSyncDirectionOneWayMemberToHub = SyncMemberPropertiesSyncDirection("OneWayMemberToHub")
)

func init() {
	SchemeBuilder.Register(&ServersDatabasesSyncGroupsSyncMembers{}, &ServersDatabasesSyncGroupsSyncMembersList{})
}
