// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20150501preview

import (
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type ManagedInstances struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagedInstances_Spec  `json:"spec,omitempty"`
	Status            ManagedInstance_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type ManagedInstancesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagedInstances `json:"items"`
}

type ManagedInstance_Status struct {
	v1alpha1.ResourceStatus `json:",inline"`
	AtProvider              ManagedInstancesObservation `json:"atProvider"`
}

type ManagedInstances_Spec struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           ManagedInstancesParameters `json:"forProvider"`
}

type ManagedInstancesObservation struct {

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Identity: The Azure Active Directory identity of the managed instance.
	Identity *ResourceIdentity_Status `json:"identity,omitempty"`

	// +kubebuilder:validation:Required
	//Location: Resource location.
	Location string `json:"location"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Resource properties.
	Properties *ManagedInstanceProperties_Status `json:"properties,omitempty"`

	//Sku: Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5,
	//BC_Gen4, BC_Gen5
	Sku *Sku_Status `json:"sku,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type ManagedInstancesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion ManagedInstancesSpecApiVersion `json:"apiVersion"`

	//Identity: Azure Active Directory identity configuration for a resource.
	Identity *ResourceIdentity `json:"identity,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: The properties of a managed instance.
	Properties                ManagedInstanceProperties `json:"properties"`
	ResourceGroupName         string                    `json:"resourceGroupName"`
	ResourceGroupNameRef      *v1alpha1.Reference       `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector        `json:"resourceGroupNameSelector,omitempty"`

	//Sku: An ARM Resource SKU.
	Sku *Sku `json:"sku,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type ManagedInstancesSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2015-05-01-preview/Microsoft.Sql.json#/definitions/ManagedInstanceProperties
type ManagedInstanceProperties struct {

	//AdministratorLogin: Administrator username for the managed instance. Can only be
	//specified when the managed instance is being created (and is required for
	//creation).
	AdministratorLogin *string `json:"administratorLogin,omitempty"`

	//AdministratorLoginPassword: The administrator login password (required for
	//managed instance creation).
	AdministratorLoginPassword *string `json:"administratorLoginPassword,omitempty"`

	//Collation: Collation of the managed instance.
	Collation *string `json:"collation,omitempty"`

	//DnsZonePartner: The resource id of another managed instance whose DNS zone this
	//managed instance will share after creation.
	DnsZonePartner *string `json:"dnsZonePartner,omitempty"`

	//InstancePoolId: The Id of the instance pool this managed server belongs to.
	InstancePoolId *string `json:"instancePoolId,omitempty"`

	//LicenseType: The license type. Possible values are 'LicenseIncluded' (regular
	//price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for
	//bringing your own SQL licenses).
	LicenseType *ManagedInstancePropertiesLicenseType `json:"licenseType,omitempty"`

	//MaintenanceConfigurationId: Specifies maintenance configuration id to apply to
	//this managed instance.
	MaintenanceConfigurationId *string `json:"maintenanceConfigurationId,omitempty"`

	//ManagedInstanceCreateMode: Specifies the mode of database creation.
	//Default: Regular instance creation.
	//Restore: Creates an instance by restoring a set of backups to specific point in
	//time. RestorePointInTime and SourceManagedInstanceId must be specified.
	ManagedInstanceCreateMode *ManagedInstancePropertiesManagedInstanceCreateMode `json:"managedInstanceCreateMode,omitempty"`

	//MinimalTlsVersion: Minimal TLS version. Allowed values: 'None', '1.0', '1.1',
	//'1.2'
	MinimalTlsVersion *string `json:"minimalTlsVersion,omitempty"`

	//ProxyOverride: Connection type used for connecting to the instance.
	ProxyOverride *ManagedInstancePropertiesProxyOverride `json:"proxyOverride,omitempty"`

	//PublicDataEndpointEnabled: Whether or not the public data endpoint is enabled.
	PublicDataEndpointEnabled *bool `json:"publicDataEndpointEnabled,omitempty"`

	//RestorePointInTime: Specifies the point in time (ISO8601 format) of the source
	//database that will be restored to create the new database.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`

	//SourceManagedInstanceId: The resource identifier of the source managed instance
	//associated with create operation of this instance.
	SourceManagedInstanceId *string `json:"sourceManagedInstanceId,omitempty"`

	//StorageSizeInGB: Storage size in GB. Minimum value: 32. Maximum value: 8192.
	//Increments of 32 GB allowed only.
	StorageSizeInGB *int `json:"storageSizeInGB,omitempty"`

	//SubnetId: Subnet resource ID for the managed instance.
	SubnetId *string `json:"subnetId,omitempty"`

	//TimezoneId: Id of the timezone. Allowed values are timezones supported by
	//Windows.
	//Windows keeps details on supported timezones, including the id, in registry under
	//KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
	//You can get those registry values via SQL Server by querying SELECT name AS
	//timezone_id FROM sys.time_zone_info.
	//List of Ids can also be obtained by executing
	//[System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	//An example of valid timezone id is "Pacific Standard Time" or "W. Europe
	//Standard Time".
	TimezoneId *string `json:"timezoneId,omitempty"`

	//VCores: The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
	VCores *int `json:"vCores,omitempty"`
}

//Generated from:
type ManagedInstanceProperties_Status struct {

	//AdministratorLogin: Administrator username for the managed instance. Can only be
	//specified when the managed instance is being created (and is required for
	//creation).
	AdministratorLogin *string `json:"administratorLogin,omitempty"`

	//AdministratorLoginPassword: The administrator login password (required for
	//managed instance creation).
	AdministratorLoginPassword *string `json:"administratorLoginPassword,omitempty"`

	//Collation: Collation of the managed instance.
	Collation *string `json:"collation,omitempty"`

	//DnsZone: The Dns Zone that the managed instance is in.
	DnsZone *string `json:"dnsZone,omitempty"`

	//DnsZonePartner: The resource id of another managed instance whose DNS zone this
	//managed instance will share after creation.
	DnsZonePartner *string `json:"dnsZonePartner,omitempty"`

	//FullyQualifiedDomainName: The fully qualified domain name of the managed
	//instance.
	FullyQualifiedDomainName *string `json:"fullyQualifiedDomainName,omitempty"`

	//InstancePoolId: The Id of the instance pool this managed server belongs to.
	InstancePoolId *string `json:"instancePoolId,omitempty"`

	//LicenseType: The license type. Possible values are 'LicenseIncluded' (regular
	//price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for
	//bringing your own SQL licenses).
	LicenseType *ManagedInstancePropertiesStatusLicenseType `json:"licenseType,omitempty"`

	//MaintenanceConfigurationId: Specifies maintenance configuration id to apply to
	//this managed instance.
	MaintenanceConfigurationId *string `json:"maintenanceConfigurationId,omitempty"`

	//ManagedInstanceCreateMode: Specifies the mode of database creation.
	//Default: Regular instance creation.
	//Restore: Creates an instance by restoring a set of backups to specific point in
	//time. RestorePointInTime and SourceManagedInstanceId must be specified.
	ManagedInstanceCreateMode *ManagedInstancePropertiesStatusManagedInstanceCreateMode `json:"managedInstanceCreateMode,omitempty"`

	//MinimalTlsVersion: Minimal TLS version. Allowed values: 'None', '1.0', '1.1',
	//'1.2'
	MinimalTlsVersion *string `json:"minimalTlsVersion,omitempty"`

	//ProxyOverride: Connection type used for connecting to the instance.
	ProxyOverride *ManagedInstancePropertiesStatusProxyOverride `json:"proxyOverride,omitempty"`

	//PublicDataEndpointEnabled: Whether or not the public data endpoint is enabled.
	PublicDataEndpointEnabled *bool `json:"publicDataEndpointEnabled,omitempty"`

	//RestorePointInTime: Specifies the point in time (ISO8601 format) of the source
	//database that will be restored to create the new database.
	RestorePointInTime *string `json:"restorePointInTime,omitempty"`

	//SourceManagedInstanceId: The resource identifier of the source managed instance
	//associated with create operation of this instance.
	SourceManagedInstanceId *string `json:"sourceManagedInstanceId,omitempty"`

	//State: The state of the managed instance.
	State *string `json:"state,omitempty"`

	//StorageSizeInGB: Storage size in GB. Minimum value: 32. Maximum value: 8192.
	//Increments of 32 GB allowed only.
	StorageSizeInGB *int `json:"storageSizeInGB,omitempty"`

	//SubnetId: Subnet resource ID for the managed instance.
	SubnetId *string `json:"subnetId,omitempty"`

	//TimezoneId: Id of the timezone. Allowed values are timezones supported by
	//Windows.
	//Windows keeps details on supported timezones, including the id, in registry under
	//KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones.
	//You can get those registry values via SQL Server by querying SELECT name AS
	//timezone_id FROM sys.time_zone_info.
	//List of Ids can also be obtained by executing
	//[System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
	//An example of valid timezone id is "Pacific Standard Time" or "W. Europe
	//Standard Time".
	TimezoneId *string `json:"timezoneId,omitempty"`

	//VCores: The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80.
	VCores *int `json:"vCores,omitempty"`
}

// +kubebuilder:validation:Enum={"2015-05-01-preview"}
type ManagedInstancesSpecApiVersion string

const ManagedInstancesSpecApiVersion20150501Preview = ManagedInstancesSpecApiVersion("2015-05-01-preview")

// +kubebuilder:validation:Enum={"Microsoft.Sql/managedInstances"}
type ManagedInstancesSpecType string

const ManagedInstancesSpecTypeMicrosoftSqlManagedInstances = ManagedInstancesSpecType("Microsoft.Sql/managedInstances")

//Generated from: https://schema.management.azure.com/schemas/2015-05-01-preview/Microsoft.Sql.json#/definitions/ResourceIdentity
type ResourceIdentity struct {

	//Type: The identity type. Set this to 'SystemAssigned' in order to automatically
	//create and assign an Azure Active Directory principal for the resource.
	Type *ResourceIdentityType `json:"type,omitempty"`
}

//Generated from:
type ResourceIdentity_Status struct {

	//PrincipalId: The Azure Active Directory principal id.
	PrincipalId *string `json:"principalId,omitempty"`

	//TenantId: The Azure Active Directory tenant id.
	TenantId *string `json:"tenantId,omitempty"`

	//Type: The identity type. Set this to 'SystemAssigned' in order to automatically
	//create and assign an Azure Active Directory principal for the resource.
	Type *ResourceIdentityStatusType `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2015-05-01-preview/Microsoft.Sql.json#/definitions/Sku
type Sku struct {

	//Capacity: Capacity of the particular SKU.
	Capacity *int `json:"capacity,omitempty"`

	//Family: If the service has different generations of hardware, for the same SKU,
	//then that can be captured here.
	Family *string `json:"family,omitempty"`

	// +kubebuilder:validation:Required
	//Name: The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `json:"name"`

	//Size: Size of the particular SKU
	Size *string `json:"size,omitempty"`

	//Tier: The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `json:"tier,omitempty"`
}

//Generated from:
type Sku_Status struct {

	//Capacity: Capacity of the particular SKU.
	Capacity *int `json:"capacity,omitempty"`

	//Family: If the service has different generations of hardware, for the same SKU,
	//then that can be captured here.
	Family *string `json:"family,omitempty"`

	// +kubebuilder:validation:Required
	//Name: The name of the SKU, typically, a letter + Number code, e.g. P3.
	Name string `json:"name"`

	//Size: Size of the particular SKU
	Size *string `json:"size,omitempty"`

	//Tier: The tier or edition of the particular SKU, e.g. Basic, Premium.
	Tier *string `json:"tier,omitempty"`
}

// +kubebuilder:validation:Enum={"BasePrice","LicenseIncluded"}
type ManagedInstancePropertiesLicenseType string

const (
	ManagedInstancePropertiesLicenseTypeBasePrice       = ManagedInstancePropertiesLicenseType("BasePrice")
	ManagedInstancePropertiesLicenseTypeLicenseIncluded = ManagedInstancePropertiesLicenseType("LicenseIncluded")
)

// +kubebuilder:validation:Enum={"Default","PointInTimeRestore"}
type ManagedInstancePropertiesManagedInstanceCreateMode string

const (
	ManagedInstancePropertiesManagedInstanceCreateModeDefault            = ManagedInstancePropertiesManagedInstanceCreateMode("Default")
	ManagedInstancePropertiesManagedInstanceCreateModePointInTimeRestore = ManagedInstancePropertiesManagedInstanceCreateMode("PointInTimeRestore")
)

// +kubebuilder:validation:Enum={"Default","Proxy","Redirect"}
type ManagedInstancePropertiesProxyOverride string

const (
	ManagedInstancePropertiesProxyOverrideDefault  = ManagedInstancePropertiesProxyOverride("Default")
	ManagedInstancePropertiesProxyOverrideProxy    = ManagedInstancePropertiesProxyOverride("Proxy")
	ManagedInstancePropertiesProxyOverrideRedirect = ManagedInstancePropertiesProxyOverride("Redirect")
)

// +kubebuilder:validation:Enum={"BasePrice","LicenseIncluded"}
type ManagedInstancePropertiesStatusLicenseType string

const (
	ManagedInstancePropertiesStatusLicenseTypeBasePrice       = ManagedInstancePropertiesStatusLicenseType("BasePrice")
	ManagedInstancePropertiesStatusLicenseTypeLicenseIncluded = ManagedInstancePropertiesStatusLicenseType("LicenseIncluded")
)

// +kubebuilder:validation:Enum={"Default","PointInTimeRestore"}
type ManagedInstancePropertiesStatusManagedInstanceCreateMode string

const (
	ManagedInstancePropertiesStatusManagedInstanceCreateModeDefault            = ManagedInstancePropertiesStatusManagedInstanceCreateMode("Default")
	ManagedInstancePropertiesStatusManagedInstanceCreateModePointInTimeRestore = ManagedInstancePropertiesStatusManagedInstanceCreateMode("PointInTimeRestore")
)

// +kubebuilder:validation:Enum={"Default","Proxy","Redirect"}
type ManagedInstancePropertiesStatusProxyOverride string

const (
	ManagedInstancePropertiesStatusProxyOverrideDefault  = ManagedInstancePropertiesStatusProxyOverride("Default")
	ManagedInstancePropertiesStatusProxyOverrideProxy    = ManagedInstancePropertiesStatusProxyOverride("Proxy")
	ManagedInstancePropertiesStatusProxyOverrideRedirect = ManagedInstancePropertiesStatusProxyOverride("Redirect")
)

// +kubebuilder:validation:Enum={"SystemAssigned"}
type ResourceIdentityStatusType string

const ResourceIdentityStatusTypeSystemAssigned = ResourceIdentityStatusType("SystemAssigned")

// +kubebuilder:validation:Enum={"SystemAssigned"}
type ResourceIdentityType string

const ResourceIdentityTypeSystemAssigned = ResourceIdentityType("SystemAssigned")

func init() {
	SchemeBuilder.Register(&ManagedInstances{}, &ManagedInstancesList{})
}
