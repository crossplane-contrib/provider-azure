apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: agentpools.compute.azure.crossplane.io
spec:
  group: compute.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: AgentPool
    listKind: AgentPoolList
    plural: agentpools
    singular: agentpool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .status.nodesCount
      name: COUNT
      type: integer
    - jsonPath: .status.availabilityZones
      name: AZ
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: An AgentPool is a managed resource that represents an Azure AgentPool.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An AgentPoolSpec defines the desired state of a AgentPool.
            properties:
              aksClusterName:
                description: AKSClusterName is the name of the AKSCluster that the cluster will be created in
                type: string
              aksClusterNameRef:
                description: AKSClusterNameRef - A reference to a AKSCluster to retrieve its id
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              aksClusterNameSelector:
                description: AKSClusterNameSelector - Select a reference to a AKSCluster to retrieve its ids
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels is selected.
                    type: object
                type: object
              availabilityZones:
                description: AvailabilityZones - Availability zones for nodes.
                items:
                  type: string
                type: array
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              enableAutoScaling:
                description: EnableAutoScaling - Whether to enable auto-scaler
                type: boolean
              maxNodeCount:
                description: MaxNodeCount - Maximum number of nodes for auto-scaling
                format: int32
                type: integer
              minNodeCount:
                description: MinNodeCount - Minimum number of nodes for auto-scaling
                format: int32
                type: integer
              mode:
                description: 'Mode - AgentPoolMode represents mode of an agent pool. Possible values include: ''System'', ''User''. Default: ''User'''
                enum:
                - System
                - User
                type: string
              nodeCount:
                description: NodeCount is the number of nodes that the cluster will initially be created with.  This can be scaled over time and defaults to 1.
                format: int32
                maximum: 100
                minimum: 0
                type: integer
              nodeTaints:
                description: NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
                items:
                  type: string
                type: array
              nodeVMSize:
                description: NodeVMSize is the name of the worker node VM size, e.g., Standard_B2s, Standard_F2s_v2, etc.
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName is the name of the resource group that the cluster will be created in
                type: string
              resourceGroupNameRef:
                description: ResourceGroupNameRef - A reference to a ResourceGroup to retrieve its name
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupNameSelector:
                description: ResourceGroupNameSelector - Select a reference to a ResourceGroup to retrieve its name
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels is selected.
                    type: object
                type: object
              vnetSubnetID:
                description: VnetSubnetID is the subnet to which the cluster will be deployed.
                type: string
              vnetSubnetIDRef:
                description: VnetSubnetIDRef - A reference to a Subnet to retrieve its ID
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              vnetSubnetIDSelector:
                description: VnetSubnetIDSelector - Select a reference to a Subnet to retrieve its ID
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels is selected.
                    type: object
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - nodeVMSize
            type: object
          status:
            description: An AgentPoolStatus represents the observed state of an AgentPool.
            properties:
              availabilityZones:
                description: AvailabilityZones - Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType.
                items:
                  type: string
                type: array
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              nodesCount:
                description: NodesCount - Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive). The default value is 1.
                type: integer
              providerID:
                description: ProviderID is the external ID to identify this resource in the cloud provider.
                type: string
              state:
                description: State is the current state of the agent pool.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
