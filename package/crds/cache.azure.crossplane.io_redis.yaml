apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: redis.cache.azure.crossplane.io
spec:
  group: cache.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Redis
    listKind: RedisList
    plural: redis
    singular: redis
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.provisioningState
      name: STATE
      type: string
    - jsonPath: .status.atProvider.redisVersion
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Redis is a managed resource that represents an Azure Redis cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RedisSpec defines the desired state of a Redis.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RedisParameters define the desired state of an Azure Redis cluster. https://docs.microsoft.com/en-us/rest/api/redis/redis/create#redisresource
                properties:
                  enableNonSslPort:
                    description: EnableNonSSLPort specifies whether the non-ssl Redis server port (6379) is enabled.
                    type: boolean
                  location:
                    description: Location in which to create this resource.
                    type: string
                  minimumTlsVersion:
                    description: 'MinimumTLSVersion - Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2''). Possible values include: ''OneFullStopZero'', ''OneFullStopOne'', ''OneFullStopTwo'''
                    type: string
                  redisConfiguration:
                    additionalProperties:
                      type: string
                    description: 'RedisConfiguration - All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples, slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries, list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value, set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
                    type: object
                  resourceGroupName:
                    description: ResourceGroupName in which to create this resource.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef to fetch resource group name.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector to select a reference to a resource group.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                  shardCount:
                    description: ShardCount specifies the number of shards to be created on a Premium Cluster Cache.
                    type: integer
                  sku:
                    description: Sku - The SKU of the Redis cache to deploy.
                    properties:
                      capacity:
                        description: 'Capacity specifies the size of Redis cache to deploy. Valid values: for C family (0, 1, 2, 3, 4, 5, 6), for P family (1, 2, 3, 4).'
                        maximum: 6
                        minimum: 0
                        type: integer
                      family:
                        description: 'Family specifies which family to use. Valid values: (C, P). Possible values include: ''C'', ''P'''
                        enum:
                        - C
                        - P
                        type: string
                      name:
                        description: 'Name specifies what type of Redis cache to deploy. Valid values: (Basic, Standard, Premium). Possible values include: ''Basic'', ''Standard'', ''Premium'''
                        enum:
                        - Basic
                        - Standard
                        - Premium
                        type: string
                    required:
                    - capacity
                    - family
                    - name
                    type: object
                  staticIp:
                    description: StaticIP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.
                    type: string
                  subnetId:
                    description: 'SubnetID specifies the full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Resource tags.
                    type: object
                  tenantSettings:
                    additionalProperties:
                      type: string
                    description: TenantSettings - A dictionary of tenant settings
                    type: object
                  zones:
                    description: Zones - A list of availability zones denoting where the resource needs to come from.
                    items:
                      type: string
                    type: array
                required:
                - location
                - sku
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RedisStatus represents the observed state of a Redis.
            properties:
              atProvider:
                description: RedisObservation represents the observed state of the Redis object in Azure.
                properties:
                  hostName:
                    description: HostName - Redis host name.
                    type: string
                  id:
                    description: ID - Resource ID.
                    type: string
                  linkedServers:
                    description: LinkedServers - List of the linked servers associated with the cache
                    items:
                      type: string
                    type: array
                  name:
                    description: Name - Resource name.
                    type: string
                  port:
                    description: Port - Redis non-SSL port.
                    type: integer
                  provisioningState:
                    description: 'ProvisioningState - Redis instance provisioning status. Possible values include: ''Creating'', ''Deleting'', ''Disabled'', ''Failed'', ''Linking'', ''Provisioning'', ''RecoveringScaleFailure'', ''Scaling'', ''Succeeded'', ''Unlinking'', ''Unprovisioning'', ''Updating'''
                    type: string
                  redisVersion:
                    description: RedisVersion - Redis version.
                    type: string
                  sslPort:
                    description: SSLPort - Redis SSL port.
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
