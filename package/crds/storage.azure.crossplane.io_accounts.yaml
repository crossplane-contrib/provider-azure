apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: accounts.storage.azure.crossplane.io
spec:
  group: storage.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Account
    listKind: AccountList
    plural: accounts
    singular: account
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.resourceGroupName
      name: RESOURCE_GROUP
      type: string
    - jsonPath: .spec.storageAccountName
      name: ACCOUNT_NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: An Account is a managed resource that represents an Azure Blob Service Account.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An AccountSpec defines the desired state of an Account.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName specifies the resource group for this Account.
                type: string
              storageAccountSpec:
                description: StorageAccountSpec specifies the desired state of this Account.
                properties:
                  identity:
                    description: Identity - The identity of the resource.
                    properties:
                      principalId:
                        description: PrincipalID - The principal ID of resource identity.
                        type: string
                      tenantId:
                        description: TenantID - The tenant ID of resource.
                        type: string
                      type:
                        description: Type - The identity type.
                        type: string
                    type: object
                  kind:
                    description: 'Kind - Indicates the type of storage account. Possible values include: ''Storage'', ''BlobStorage'''
                    enum:
                    - Storage
                    - BlobStorage
                    type: string
                  location:
                    description: Location - The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
                    type: string
                  properties:
                    description: StorageAccountSpecProperties - The parameters used to create the storage account.
                    properties:
                      accessTier:
                        description: 'AccessTier - Required for storage accounts where kind = BlobStorage. The access tier used for billing. Possible values include: ''Hot'', ''Cool'''
                        enum:
                        - Hot
                        - Cool
                        type: string
                      customDomain:
                        description: CustomDomain - User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. to clear the existing custom domain, use an empty string for the custom domain name property.
                        properties:
                          name:
                            description: Name - custom domain name assigned to the storage account. Name is the CNAME source.
                            type: string
                          useSubDomainName:
                            description: UseSubDomainName - Indicates whether indirect CNAME validation is enabled.
                            type: boolean
                        type: object
                      encryption:
                        description: Encryption - Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.
                        properties:
                          keySource:
                            description: "KeySource - The encryption keySource (provider). \n Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault"
                            enum:
                            - Microsoft.Storage
                            - Microsoft.Keyvault
                            type: string
                          keyvaultproperties:
                            description: KeyVaultProperties - Properties provided by key vault.
                            properties:
                              keyname:
                                description: KeyName - The name of KeyVault key.
                                type: string
                              keyvaulturi:
                                description: KeyVaultURI - The Uri of KeyVault.
                                type: string
                              keyversion:
                                description: KeyVersion - The version of KeyVault key.
                                type: string
                            type: object
                          services:
                            description: Services - List of services which support encryption.
                            properties:
                              blob:
                                description: Blob - The encryption function of the blob storage service.
                                type: boolean
                              file:
                                description: File - The encryption function of the file storage service.
                                type: boolean
                            type: object
                        type: object
                      networkAcls:
                        description: NetworkRuleSet - Network rule set
                        properties:
                          bypass:
                            description: 'Bypass - Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics. Possible values include: ''None'', ''Logging'', ''Metrics'', ''AzureServices'''
                            type: string
                          defaultAction:
                            description: "DefaultAction - Specifies the default action of allow or deny when no other rules match. \n Possible values include: 'Allow', 'Deny'"
                            enum:
                            - Allow
                            - Deny
                            type: string
                          ipRules:
                            description: IPRules - Sets the IP ACL rules
                            items:
                              description: IPRule IP rule with specific IP or IP range in CIDR format.
                              properties:
                                action:
                                  description: 'Action - The action of IP ACL rule. Possible values include: ''Allow'''
                                  enum:
                                  - Allow
                                  type: string
                                value:
                                  description: IPAddressOrRange - Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
                                  type: string
                              type: object
                            type: array
                          virtualNetworkRules:
                            description: VirtualNetworkRules - Sets the virtual network rules
                            items:
                              description: VirtualNetworkRule virtual Network rule.
                              properties:
                                action:
                                  description: 'Action - The action of virtual network rule. Possible values include: ''Allow'''
                                  enum:
                                  - Allow
                                  type: string
                                id:
                                  description: 'VirtualNetworkResourceID - Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
                                  type: string
                              type: object
                            type: array
                        type: object
                      supportsHttpsTrafficOnly:
                        description: EnableHTTPSTrafficOnly - Allows https traffic only to storage service if sets to true.
                        type: boolean
                    type: object
                  sku:
                    description: Sku of the storage account.
                    properties:
                      capabilities:
                        description: Capabilities - The capability information in the specified sku, including file encryption, network acls, change notification, etc.
                        items:
                          description: skuCapability the capability information in the specified sku, including file encryption, network acls, change notification, etc.
                          properties:
                            name:
                              description: Name - The name of capability, The capability information in the specified sku, including file encryption, network acls, change notification, etc.
                              type: string
                            value:
                              description: Value - A string value to indicate states of given capability. Possibly 'true' or 'false'.
                              enum:
                              - true
                              - false
                              type: string
                          type: object
                        type: array
                      kind:
                        description: "Kind - Indicates the type of storage account. \n Possible values include: 'Storage', 'BlobStorage'"
                        enum:
                        - Storage
                        - BlobStorage
                        type: string
                      locations:
                        description: Locations - The set of locations that the Sku is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
                        items:
                          type: string
                        type: array
                      name:
                        description: "Name - Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType. \n Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'"
                        enum:
                        - Standard_LRS
                        - Standard_GRS
                        - Standard_RAGRS
                        - Standard_ZRS
                        - Premium_LRS
                        type: string
                      resourceType:
                        description: ResourceType - The type of the resource, usually it is 'storageAccounts'.
                        type: string
                      tier:
                        description: "Tier - Gets the sku tier. This is based on the Sku name. \n Possible values include: 'Standard', 'Premium'"
                        enum:
                        - Standard
                        - Premium
                        type: string
                    required:
                    - name
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - A list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
                    type: object
                required:
                - kind
                - location
                - sku
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - resourceGroupName
            - storageAccountSpec
            type: object
          status:
            description: An AccountStatus represents the observed state of an Account.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: ID of this Account.
                type: string
              name:
                description: Name of this Account.
                type: string
              properties:
                description: Properties of this Account.
                properties:
                  creationTime:
                    description: CreationTime - the creation date and time of the storage account in UTC.
                    format: date-time
                    type: string
                  lastGeoFailoverTime:
                    description: LastGeoFailoverTime - the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
                    format: date-time
                    type: string
                  primaryEndpoints:
                    description: PrimaryEndpoints - the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
                    properties:
                      blob:
                        description: Blob - the blob endpoint.
                        type: string
                      file:
                        description: File - the file endpoint.
                        type: string
                      queue:
                        description: Queue - the queue endpoint.
                        type: string
                      table:
                        description: Table - the table endpoint.
                        type: string
                    type: object
                  primaryLocation:
                    description: PrimaryLocation - the location of the primary data center for the storage account.
                    type: string
                  provisioningState:
                    description: 'ProvisioningState - the status of the storage account at the time the operation was called. Possible values include: ''Creating'', ''ResolvingDNS'', ''Succeeded'''
                    enum:
                    - Creating
                    - ResolvingDNS
                    - Succeeded
                    type: string
                  secondaryEndpoints:
                    description: SecondaryEndpoints - the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the Sku name is Standard_RAGRS.
                    properties:
                      blob:
                        description: Blob - the blob endpoint.
                        type: string
                      file:
                        description: File - the file endpoint.
                        type: string
                      queue:
                        description: Queue - the queue endpoint.
                        type: string
                      table:
                        description: Table - the table endpoint.
                        type: string
                    type: object
                  secondaryLocation:
                    description: SecondaryLocation - the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
                    type: string
                  statusOfPrimary:
                    description: 'StatusOfPrimary - the status indicating whether the primary location of the storage account is available or unavailable. Possible values include: ''Available'', ''Unavailable'''
                    type: string
                  statusOfSecondary:
                    description: 'StatusOfSecondary - the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the Sku name is Standard_GRS or Standard_RAGRS. Possible values include: ''Available'', ''Unavailable'''
                    enum:
                    - Available
                    - Unavailable
                    type: string
                type: object
              type:
                description: Type of this Account.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
